{"version":3,"sources":["webpack://@fremtind/portal/../packages/react-hooks/src/useReducedMotion/useReducedMotion.tsx","webpack://@fremtind/portal/../packages/react-hooks/src/animation.tsx","webpack://@fremtind/portal/../packages/react-hooks/src/useClickOutside.ts","webpack://@fremtind/portal/../packages/react-hooks/src/useScreen/state.ts","webpack://@fremtind/portal/../packages/react-hooks/src/useMutationObserver/useMutationObserver.ts","webpack://@fremtind/portal/../packages/react-hooks/src/useScreen/useScreen.ts","webpack://@fremtind/portal/../packages/react-hooks/src/useScrollIntoView/useScrollIntoView.tsx","webpack://@fremtind/portal/../packages/react-hooks/src/useFocusOutside.ts","webpack://@fremtind/portal/../packages/react-hooks/src/useIntersectionObserver/useIntersectionObserver.ts","webpack://@fremtind/portal/../packages/react-hooks/src/useKeyListener.ts","webpack://@fremtind/portal/../packages/react-hooks/documentation/ClickOutsideExample.tsx","webpack://@fremtind/portal/../packages/react-hooks/documentation/clickOutside.mdx"],"names":["PREFERS_REDUCED_MOTION","useReducedMotion","useState","window","matchMedia","matches","prefersReducedMotion","setPrefersReducedMotion","useEffect","mediaQueryList","listener","event","addListener","removeListener","useAnimatedHeight","isOpen","raf1","useRef","raf2","elementRef","firstRender","handleTransitionEnd","element","getElement","removeAttribute","runAnimation","useCallback","current","style","display","overflow","height","scrollHeight","requestAnimationFrame","useLayoutEffect","addEventListener","removeEventListener","r1","r2","cancelAnimationFrame","el","useClickOutside","ref","fn","handleClickOutside","contains","target","document","ActionTypes","hasWindowWithMutationObserver","MutationObserver","useMutationObserver","targetRef","onObservation","config","observerRef","observer","disconnect","observe","actionTypes","resized","setDeviceSize","width","isSmallDevice","breakpoints","isMediumDevice","isLargeDevice","isXlDevice","isPortrait","isLandscape","inner","initialState","init","innerWidth","innerHeight","reducer","state","type","useScreen","useReducer","device","deviceDispatch","handleScreenChange","useScrollIntoView","timeout","autoScroll","options","behavior","scrollIntoView","scrollFn","setTimeout","clearTimeout","useFocusOutside","handleFocusOutside","hasWindowWithIntersectionObserver","IntersectionObserver","useIntersectionObserver","onIntersect","fallback","useKeyListener","keys","handleKeyDown","includes","key","listOfClicksOutside","appendToClickOutsideList","isEnabled","setIsEnabled","clickOutsideRef","clickOutsideListRef","className","onClick","length","map","item","idx","_frontmatter","makeShortcode","name","props","console","warn","Ingress","ComponentExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","component","ClickOutsideExample","isMDXComponent"],"mappings":"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","file":"component---packages-react-hooks-documentation-click-outside-mdx-282351754654ef24ca06.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst PREFERS_REDUCED_MOTION = \"(prefers-reduced-motion: no-preference)\";\nconst getInitialState = () => {\n    if (typeof window !== \"undefined\" && window.matchMedia) {\n        return !window.matchMedia(PREFERS_REDUCED_MOTION).matches;\n    }\n    return false;\n};\n\nexport const useReducedMotion = (): boolean => {\n    const [prefersReducedMotion, setPrefersReducedMotion] = useState(getInitialState());\n\n    useEffect(() => {\n        let mediaQueryList: MediaQueryList;\n        let listener: (event: MediaQueryListEvent) => void;\n        if (typeof window !== \"undefined\" && window.matchMedia) {\n            mediaQueryList = window.matchMedia(PREFERS_REDUCED_MOTION);\n            listener = (event: MediaQueryListEvent) => setPrefersReducedMotion(!event.matches);\n            mediaQueryList?.addListener(listener);\n        }\n\n        return () => {\n            mediaQueryList?.removeListener(listener);\n        };\n    }, []);\n\n    return prefersReducedMotion;\n};\n","import { MutableRefObject, useEffect, useRef, RefObject, useCallback, useLayoutEffect } from \"react\";\nimport { useReducedMotion } from \"./useReducedMotion/useReducedMotion\";\n\ninterface HTMLElementOrCoreToggleElement<T extends HTMLElementOrCoreToggleElement<T>> extends HTMLElement {\n    el?: T; // Hack and workaround until https://github.com/nrkno/custom-element-to-react/pull/17 has landed\n}\n\nexport function useAnimatedHeight<T extends HTMLElement>(isOpen: boolean): [RefObject<T>, () => void] {\n    const raf1 = useRef<number>();\n    const raf2 = useRef<number>();\n    const elementRef = useRef<T>(null);\n    const firstRender = useRef<boolean>(true);\n    const prefersReducedMotion = useReducedMotion();\n\n    function handleTransitionEnd() {\n        const element = getElement(elementRef);\n        if (element) {\n            element.removeAttribute(\"style\");\n        }\n    }\n\n    const runAnimation = useCallback(() => {\n        if (prefersReducedMotion) {\n            return;\n        }\n        if (firstRender.current) {\n            return; // Do not play animation on first render\n        }\n        const element = getElement(elementRef);\n        if (element) {\n            element.style.display = \"block\";\n            element.style.overflow = \"hidden\";\n            if (isOpen) {\n                element.style.height = \"0\";\n                element.style.height = `${element.scrollHeight}px`;\n            } else {\n                // If the scrollHeight is 0 it means that we are transitioning from height 0 -> 0.\n                // This causes the \"transitionend\"-event to never fire and the element gets stuck with\n                // style: height: 0; display: block; overflow:hidden\n                if (element.scrollHeight === 0) {\n                    element.removeAttribute(\"style\");\n                    return;\n                }\n\n                element.style.height = `${element.scrollHeight}px`;\n\n                raf1.current = requestAnimationFrame(() => {\n                    raf2.current = requestAnimationFrame(() => {\n                        element.style.height = `${0}px`;\n                    });\n                });\n            }\n        }\n    }, [isOpen]);\n\n    useLayoutEffect(() => {\n        runAnimation();\n    }, [isOpen, runAnimation]);\n\n    useEffect(() => {\n        const element = getElement(elementRef);\n        if (element) {\n            element.addEventListener(\"transitionend\", handleTransitionEnd);\n        }\n\n        return () => {\n            if (element) {\n                element.removeEventListener(\"transitionend\", handleTransitionEnd);\n            }\n        };\n    }, [isOpen]);\n\n    useEffect(() => {\n        const r1 = raf1.current;\n        const r2 = raf2.current;\n        firstRender.current = false;\n        return () => {\n            r1 && cancelAnimationFrame(r1);\n            r2 && cancelAnimationFrame(r2);\n        };\n    }, [raf1, raf2]);\n\n    return [elementRef, runAnimation];\n}\n\nfunction getElement(elementRef: MutableRefObject<HTMLElementOrCoreToggleElement<HTMLElement> | null>) {\n    // Workaround to handle custom elements from NRK Core components until this lands:\n    // https://github.com/nrkno/custom-element-to-react/pull/17\n    return elementRef.current && (elementRef.current.el || elementRef.current);\n}\n","import { RefObject, useEffect } from \"react\";\n\nexport function useClickOutside(ref: RefObject<HTMLElement> | null, fn: () => void) {\n    function handleClickOutside(event: MouseEvent) {\n        if (ref?.current && !ref.current.contains(event.target as Node)) {\n            fn();\n        }\n    }\n\n    useEffect(() => {\n        if (ref) {\n            document && document.addEventListener(\"click\", handleClickOutside);\n        }\n        return () => {\n            if (ref) {\n                document && document.removeEventListener(\"click\", handleClickOutside);\n            }\n        };\n    });\n}\n","import { breakpoints } from \"@fremtind/jkl-core\";\n\nexport interface State {\n    isSmallDevice: boolean;\n    isMediumDevice: boolean;\n    isLargeDevice: boolean;\n    isXlDevice: boolean;\n    isLandscape: boolean;\n    isPortrait: boolean;\n    inner: {\n        height: number;\n        width: number;\n    };\n}\n\nenum ActionTypes {\n    resized = \"WINDOW_RESIZED\",\n}\n\ninterface Action {\n    type: ActionTypes;\n    width: number;\n    height: number;\n}\n\nexport const actionTypes = {\n    resized: ActionTypes.resized,\n};\n\nconst setDeviceSize = (width: number, height: number) => ({\n    isSmallDevice: width <= breakpoints.small,\n    isMediumDevice: width > breakpoints.small && width < breakpoints.medium,\n    isLargeDevice: width > breakpoints.medium && width < breakpoints.large,\n    isXlDevice: width > breakpoints.large,\n    isPortrait: height >= width,\n    isLandscape: height < width,\n    inner: {\n        height,\n        width,\n    },\n});\n\nexport const initialState = {\n    isSmallDevice: false,\n    isMediumDevice: false,\n    isLargeDevice: false,\n    isXlDevice: false,\n    isLandscape: false,\n    isPortrait: false,\n    inner: {\n        height: 0,\n        width: 0,\n    },\n};\n\nexport const init = () => {\n    const width = typeof window !== \"undefined\" ? window.innerWidth : 0;\n    const height = typeof window !== \"undefined\" ? window.innerHeight : 0;\n    return setDeviceSize(width, height);\n};\n\nexport const reducer = (state: State, { type, width, height }: Action) => {\n    switch (type) {\n        case actionTypes.resized:\n            return {\n                ...state,\n                ...setDeviceSize(width, height),\n            };\n    }\n};\n","import { useEffect, useRef, RefObject } from \"react\";\n\nconst hasWindowWithMutationObserver = () => typeof window !== \"undefined\" && typeof MutationObserver !== \"undefined\";\n\nexport const useMutationObserver = (\n    targetRef: RefObject<HTMLElement>,\n    onObservation: MutationCallback,\n    config?: Partial<MutationObserverInit>,\n) => {\n    const observerRef = useRef<MutationObserver>(null);\n\n    useEffect(() => {\n        let observer = observerRef.current;\n\n        if (hasWindowWithMutationObserver()) {\n            const target = targetRef.current;\n\n            if (observer) {\n                observer.disconnect();\n            }\n\n            observer = new MutationObserver(onObservation);\n\n            if (target) {\n                observer.observe(target, config);\n            }\n        }\n        return () => {\n            if (hasWindowWithMutationObserver() && observer) {\n                observer.disconnect();\n            }\n        };\n    }, [targetRef, onObservation, config]);\n};\n","import { useEffect, useReducer } from \"react\";\nimport { reducer, initialState, init, actionTypes } from \"./state\";\n\nexport const useScreen = () => {\n    const [device, deviceDispatch] = useReducer(reducer, initialState, init);\n\n    const handleScreenChange = () =>\n        requestAnimationFrame(() =>\n            deviceDispatch({ type: actionTypes.resized, width: window.innerWidth, height: window.innerHeight }),\n        );\n\n    useEffect(() => {\n        if (typeof window !== \"undefined\") {\n            window.addEventListener(\"resize\", handleScreenChange);\n        }\n        return () => {\n            if (typeof window !== \"undefined\") {\n                window.removeEventListener(\"resize\", handleScreenChange);\n            }\n        };\n    }, []);\n\n    return { ...device };\n};\n","import { useEffect, RefObject } from \"react\";\n\ntype ValueOf<T> = T[keyof T];\n\ninterface Props {\n    ref: RefObject<ValueOf<HTMLElementTagNameMap>>;\n    timeout?: number;\n    autoScroll?: boolean;\n    options?: ScrollIntoViewOptions;\n}\n\nexport const useScrollIntoView = ({ ref, timeout = 0, autoScroll = true, options = { behavior: \"smooth\" } }: Props) => {\n    const scrollIntoView = () => {\n        if (ref?.current) {\n            ref.current.scrollIntoView(options);\n        }\n    };\n    useEffect(() => {\n        if (!autoScroll) {\n            return;\n        }\n        const scrollFn = setTimeout(scrollIntoView, timeout);\n        return () => clearTimeout(scrollFn);\n    }, [ref, timeout, autoScroll]);\n\n    return [scrollIntoView];\n};\n","import { RefObject, useEffect } from \"react\";\n\nexport function useFocusOutside(ref: RefObject<HTMLElement> | null, fn: () => void) {\n    function handleFocusOutside(event: FocusEvent) {\n        if (ref?.current && !ref.current.contains(event.target as Node)) {\n            fn();\n        }\n    }\n\n    useEffect(() => {\n        if (ref) {\n            document && document.addEventListener(\"focusin\", handleFocusOutside);\n        }\n        return () => {\n            if (ref) {\n                document && document.removeEventListener(\"focusin\", handleFocusOutside);\n            }\n        };\n    });\n}\n","import { useEffect, useRef, RefObject } from \"react\";\n\nconst hasWindowWithIntersectionObserver = () =>\n    typeof window !== \"undefined\" && typeof IntersectionObserver !== \"undefined\";\n\nexport const useIntersectionObserver = (\n    targetRef: RefObject<HTMLElement | SVGElement>,\n    onIntersect: IntersectionObserverCallback,\n    fallback: VoidFunction,\n    options?: Partial<IntersectionObserverInit>,\n) => {\n    const observerRef = useRef<IntersectionObserver>(null);\n\n    useEffect(() => {\n        let observer = observerRef.current;\n        if (hasWindowWithIntersectionObserver()) {\n            const target = targetRef.current;\n\n            if (observer) {\n                observer.disconnect();\n            }\n\n            observer = new IntersectionObserver(onIntersect, options);\n\n            if (target) {\n                observer.observe(target);\n            }\n        } else {\n            fallback();\n        }\n        return () => {\n            if (hasWindowWithIntersectionObserver() && observer) {\n                observer.disconnect();\n            }\n        };\n    }, [targetRef, onIntersect, fallback, options]);\n};\n","import { RefObject, useEffect } from \"react\";\n\nexport function useKeyListener(\n    ref: RefObject<HTMLElement> | null,\n    keys: string[] | string | null,\n    fn: (event: KeyboardEvent) => void,\n) {\n    if (typeof keys === \"string\") {\n        keys = [keys];\n    }\n    function handleKeyDown(event: KeyboardEvent) {\n        if (keys && !keys.includes(event.key)) {\n            return;\n        }\n        fn(event);\n    }\n\n    useEffect(() => {\n        const element = ref && ref.current;\n        if (element) {\n            element.addEventListener(\"keydown\", handleKeyDown);\n        }\n        return () => {\n            if (element) {\n                element.removeEventListener(\"keydown\", handleKeyDown);\n            }\n        };\n    });\n}\n","import React, { useState, useRef } from \"react\";\nimport { useClickOutside } from \"../src\";\n\nconst ClickOutsideExample = () => {\n    const [listOfClicksOutside, appendToClickOutsideList] = useState<string[]>([]);\n    const [isEnabled, setIsEnabled] = useState(false);\n\n    const clickOutsideRef = useRef(null);\n    const clickOutsideListRef = useRef<string[]>();\n\n    clickOutsideListRef.current = listOfClicksOutside;\n    const onClickOutside = () => {\n        if (isEnabled) {\n            appendToClickOutsideList([...(clickOutsideListRef.current || []), \"Klikk utenfor\"]);\n        }\n    };\n\n    useClickOutside(clickOutsideRef, onClickOutside);\n\n    return (\n        <section ref={clickOutsideRef}>\n            <p className=\"jkl-body jkl-spacing--bottom-1\">\n                Klikk utenfor eksempelet for å se klikket listet opp under. Klikk inne i eksempelet vil ikke listes opp\n            </p>\n            <button\n                className=\"jkl-button jkl-button--secondary jkl-spacing--right-1\"\n                onClick={() => setIsEnabled(!isEnabled)}\n            >\n                {isEnabled ? \"Skru av\" : \"Skru på\"}\n            </button>\n            <button className=\"jkl-button jkl-button--tertiary\" onClick={() => appendToClickOutsideList([])}>\n                Nullstill liste\n            </button>\n            {listOfClicksOutside.length !== 0 && (\n                <ul className=\"jkl-list jkl-list--unordered jkl-body\">\n                    {listOfClicksOutside.map((item, idx) => (\n                        <li className=\"jkl-list__item\" key={idx}>\n                            {item}\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </section>\n    );\n};\n\nexport default ClickOutsideExample;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport ClickOutsideExample from \"./ClickOutsideExample\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    useClickOutside lar deg lytte på klikk utenfor et element. Det kan være nyttig for å lukke modaler o.l.\n    </Ingress>\n    <ComponentExample component={ClickOutsideExample} mdxType=\"ComponentExample\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}