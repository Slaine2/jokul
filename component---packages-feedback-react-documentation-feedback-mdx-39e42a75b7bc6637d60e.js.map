{"version":3,"sources":["webpack:///../packages/feedback-react/src/Smiley.tsx","webpack:///../packages/feedback-react/src/BaseFeedback.tsx","webpack:///../packages/feedback-react/src/FeedbackValues.tsx","webpack:///../packages/feedback-react/src/Feedback.tsx","webpack:///../packages/feedback-react/src/SimplifiedFeedback.tsx","webpack:///../packages/feedback-react/documentation/Example.tsx","webpack:///../packages/feedback-react/documentation/Feedback.mdx","webpack:///../packages/button-react/build/browser/index.js","webpack:///../packages/loader-react/build/browser/index.js"],"names":["Smiley","element","aria-hidden","className","fill","viewBox","cx","cy","r","d","x1","y1","x2","y2","getSmiley","FeedbackContext","createContext","options","setValue","BaseFeedback","label","onSubmit","description","renderCustomSuccess","successMessage","successTitle","callToActionText","showTextArea","textAreaLabel","textAreaHelpLabel","feedbackOptions","headingLevel","content","useState","feedbackValue","setFeedbackValue","message","setMessage","feedbackSubmitted","setFeedbackSubmitted","feedbackSubmittedAnimation","setFeedbackSubmittedAnimation","animationRef","useAnimatedHeight","undefined","handleSubmit","useCallback","useEffect","window","addEventListener","removeEventListener","H","cn","Provider","value","data-testid","title","e","preventDefault","setTimeout","ref","name","variant","rows","helpLabel","onChange","currentTarget","type","FeedbackContent","useContext","id","nanoid","map","feedbackOption","key","checked","htmlFor","Feedback","props","legend","choices","_","idx","toString","inline","parseInt","target","selectedValue","SimplifiedFeedback","rest","Example","boolValues","Component","console","info","_frontmatter","makeShortcode","warn","Ingress","ComponentExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","knobs","boolProps","component","parentName","isMDXComponent","BaseButton","forwardRef","React","createElement","_extends","displayName","makeButtonComponent","buttonType","_ref","children","_ref$className","forceCompact","inverted","onClick","onTouchStart","loader","_objectWithoutProperties","componentClassName","classNames","handleTouch","event","targetTouches","length","Xcoord","clientX","getBoundingClientRect","x","Ycoord","clientY","y","style","setProperty","toPrecision","classList","add","remove","showLoader","disabled","Loader","textDescription","negative","PrimaryButton","SecondaryButton","TertiaryButton","_ref$negative","_ref$inline","_ref$dataTestAutoId","dataTestAutoId","role"],"mappings":"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","file":"component---packages-feedback-react-documentation-feedback-mdx-39e42a75b7bc6637d60e.js","sourcesContent":["import React, { FC } from \"react\";\nimport { FeedbackValue } from \"./types\";\n\nconst getSmiley = (element: FeedbackValue) => {\n    switch (element) {\n        case 1:\n            return <path d=\"M40 42C40 36.4772 35.0751 32 29 32C22.9249 32 18 36.4772 18 42\"></path>;\n        case 2:\n            return <path d=\"M40 39C37.5556 35.4353 33.8529 33 29 33C24.1471 33 20.4444 35.4353 18 39\"></path>;\n        case 3:\n            return <line x1=\"20\" y1=\"37\" x2=\"36\" y2=\"37\"></line>;\n        case 4:\n            return <path d=\"M18 35C20.4444 38.5647 24.1471 41 29 41C33.8529 41 37.5556 38.5647 40 35\"></path>;\n        case 5:\n            return <path d=\"M29 45C36.5429 45 40.1429 38.3333 41 35L17 35C17.5714 38.3333 21.4571 45 29 45Z\"></path>;\n    }\n};\n\nexport const Smiley: FC<{ element: FeedbackValue }> = ({ element }) => (\n    <svg\n        aria-hidden\n        className={`jkl-feedback__icon jkl-feedback__icon--${element}`}\n        fill=\"currentColor\"\n        viewBox=\"0 0 57 57\"\n    >\n        <circle cx=\"28.5\" cy=\"28.5\" r=\"27.5\"></circle>\n        <circle cx=\"19\" cy=\"24\" r=\"2\" className=\"jkl-feedback__icon__eyes\"></circle>\n        <circle cx=\"38\" cy=\"24\" r=\"2\" className=\"jkl-feedback__icon__eyes\"></circle>\n        {getSmiley(element)}\n    </svg>\n);\n","import React, { createContext, useCallback, useEffect, useState, FC, ReactNode, FormEvent, ChangeEvent } from \"react\";\nimport cn from \"classnames\";\nimport { TextArea } from \"@fremtind/jkl-text-input-react\";\nimport { SecondaryButton } from \"@fremtind/jkl-button-react\";\nimport { SuccessMessage } from \"@fremtind/jkl-message-box-react\";\nimport { useAnimatedHeight } from \"@fremtind/jkl-react-hooks\";\nimport { VERY_UNHAPPY, UNHAPPY, NEUTRAL, HAPPY, VERY_HAPPY } from \"./FeedbackValues\";\nimport { FeedbackValue } from \"./types\";\n\nexport type FeedbackPayload = {\n    feedbackValue: FeedbackValue;\n    message?: string;\n};\n\ninterface CustomSuccessProps {\n    value?: FeedbackValue;\n    message: string;\n}\n\nexport interface BaseFeedbackProps {\n    label: string;\n    onSubmit: (data: FeedbackPayload) => void;\n    description?: string;\n    feedbackOptions?: FeedbackValue[];\n    renderCustomSuccess?: (props: CustomSuccessProps) => ReactNode;\n    successTitle?: string;\n    successMessage?: string;\n    className?: string;\n    callToActionText?: string;\n    showTextArea?: boolean;\n    textAreaLabel?: string;\n    textAreaHelpLabel?: string;\n    headingLevel?: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"p\";\n}\n\ninterface Props extends BaseFeedbackProps {\n    content: ReactNode;\n}\n\nexport const FeedbackContext = createContext<{\n    options: FeedbackValue[];\n    value?: FeedbackValue;\n    setValue: (next: FeedbackValue) => void;\n}>({ options: [], setValue: () => undefined });\n\nexport const BaseFeedback: FC<Props> = ({\n    label,\n    onSubmit,\n    description,\n    renderCustomSuccess,\n    successMessage = \"Det hjelper oss i arbeidet med å forbedre våre løsninger\",\n    successTitle = \"Takk for tilbakemeldingen!\",\n    callToActionText = \"Send inn tilbakemelding\",\n    showTextArea = true,\n    textAreaLabel = \"Tips oss gjerne om hva vi kan forbedre\",\n    textAreaHelpLabel = \"\",\n    className = \"\",\n    feedbackOptions = [VERY_UNHAPPY, UNHAPPY, NEUTRAL, HAPPY, VERY_HAPPY],\n    headingLevel = \"h3\",\n    content,\n}) => {\n    const [feedbackValue, setFeedbackValue] = useState<FeedbackValue>();\n    const [message, setMessage] = useState(\"\");\n    const [feedbackSubmitted, setFeedbackSubmitted] = useState(false);\n    const [feedbackSubmittedAnimation, setFeedbackSubmittedAnimation] = useState(false);\n    const [animationRef] = useAnimatedHeight<HTMLDivElement>(feedbackValue !== undefined);\n\n    const handleSubmit = useCallback(() => {\n        if (!feedbackSubmitted && feedbackValue) {\n            onSubmit({ feedbackValue, message });\n        }\n    }, [feedbackValue, feedbackSubmitted, message, onSubmit]);\n\n    const handleActiveSubmit = (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        handleSubmit();\n        setFeedbackSubmittedAnimation(true);\n        setTimeout(() => setFeedbackSubmitted(true), 250);\n    };\n\n    const handleMessageChange = (e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) =>\n        setMessage(e.currentTarget.value);\n\n    useEffect(() => {\n        if (typeof window !== \"undefined\") {\n            window.addEventListener(\"beforeunload\", handleSubmit);\n        }\n        return () => {\n            window.removeEventListener(\"beforeunload\", handleSubmit);\n        };\n    }, [handleSubmit]);\n\n    const H = headingLevel;\n\n    return (\n        <div className={cn(\"jkl-feedback\", className)}>\n            <FeedbackContext.Provider\n                value={{ options: feedbackOptions, setValue: setFeedbackValue, value: feedbackValue }}\n            >\n                {feedbackSubmitted && (\n                    <section className=\"jkl-feedback__success\" data-testid=\"feedback-success\">\n                        {renderCustomSuccess && renderCustomSuccess({ value: feedbackValue, message })}\n                        {!renderCustomSuccess && <SuccessMessage title={successTitle}>{successMessage}</SuccessMessage>}\n                    </section>\n                )}\n                {!feedbackSubmitted && (\n                    <form\n                        className={cn({ \"jkl-feedback--hidden\": feedbackSubmittedAnimation })}\n                        onSubmit={handleActiveSubmit}\n                    >\n                        <div className=\"jkl-feedback__heading\">\n                            <H className=\"jkl-heading-large\">{label}</H>\n                            {description && <p className=\"jkl-lead\">{description}</p>}\n                        </div>\n                        <fieldset className=\"jkl-feedback__fieldset\">{content}</fieldset>\n                        <section\n                            ref={animationRef}\n                            className={cn(\"jkl-feedback__input-submit\", {\n                                \"jkl-feedback__input-submit--hidden jkl-layout-spacing--medium-top\":\n                                    feedbackValue === undefined,\n                            })}\n                        >\n                            {showTextArea && (\n                                <TextArea\n                                    data-testid=\"feedback-text\"\n                                    name=\"feedback-text\"\n                                    label={textAreaLabel}\n                                    variant=\"small\"\n                                    rows={3}\n                                    helpLabel={textAreaHelpLabel}\n                                    value={message}\n                                    onChange={handleMessageChange}\n                                />\n                            )}\n                            <div className=\"jkl-feedback__button-group\">\n                                <SecondaryButton\n                                    data-testid=\"submit-button\"\n                                    className=\"jkl-layout-spacing--medium-top\"\n                                    type=\"submit\"\n                                >\n                                    {callToActionText}\n                                </SecondaryButton>\n                            </div>\n                        </section>\n                    </form>\n                )}\n            </FeedbackContext.Provider>\n        </div>\n    );\n};\n","export const VERY_UNHAPPY = 1;\nexport const UNHAPPY = 2;\nexport const NEUTRAL = 3;\nexport const HAPPY = 4;\nexport const VERY_HAPPY = 5;\n","import React, { Fragment, useContext, useState, FC } from \"react\";\nimport { ScreenReaderOnly } from \"@fremtind/jkl-core\";\nimport { Smiley } from \"./Smiley\";\nimport { BaseFeedback, BaseFeedbackProps, FeedbackContext } from \"./BaseFeedback\";\nimport { nanoid } from \"nanoid\";\n\nconst FeedbackContent = () => {\n    const { options, value, setValue } = useContext(FeedbackContext);\n    const [id] = useState(nanoid(8));\n\n    return (\n        <>\n            {options?.map((feedbackOption) => (\n                <Fragment key={feedbackOption}>\n                    <input\n                        className=\"jkl-feedback__answer__input\"\n                        type=\"radio\"\n                        name=\"feedback\"\n                        id={`${id}-feedback--${feedbackOption}`}\n                        value={feedbackOption}\n                        onChange={() => setValue(feedbackOption)}\n                        checked={value === feedbackOption}\n                    />\n                    <label\n                        data-testid={`feedback-${feedbackOption}`}\n                        className=\"jkl-feedback__answer\"\n                        htmlFor={`${id}-feedback--${feedbackOption}`}\n                    >\n                        <Smiley element={feedbackOption} />\n                        <ScreenReaderOnly>{feedbackOption}</ScreenReaderOnly>\n                    </label>\n                </Fragment>\n            ))}\n        </>\n    );\n};\n\nexport const Feedback: FC<BaseFeedbackProps> = (props) => {\n    return <BaseFeedback {...props} content={<FeedbackContent />} />;\n};\n","import React, { useContext, FC } from \"react\";\nimport { RadioButtons } from \"@fremtind/jkl-radio-button-react\";\nimport { BaseFeedback, BaseFeedbackProps, FeedbackContext } from \"./BaseFeedback\";\nimport { FeedbackValue } from \"./types\";\n\nconst FeedbackContent: FC<{ legend: string }> = ({ legend }) => {\n    const { options, value, setValue } = useContext(FeedbackContext);\n\n    return (\n        <RadioButtons\n            legend={legend}\n            name=\"feedback\"\n            choices={options.map((_, idx) => (idx + 1).toString())}\n            inline\n            onChange={(e) => setValue(parseInt(e.target.value, 10) as FeedbackValue)}\n            selectedValue={value?.toString()}\n        />\n    );\n};\n\nexport interface SimplifiedFeedbackProps extends Omit<BaseFeedbackProps, \"description\"> {\n    description: string;\n}\n\nexport const SimplifiedFeedback = ({ description, ...rest }: SimplifiedFeedbackProps) => {\n    return <BaseFeedback {...rest} content={<FeedbackContent legend={description} />} />;\n};\n","import React from \"react\";\nimport { ExampleComponentProps } from \"@fremtind/jkl-portal-components\";\nimport { SuccessMessage } from \"@fremtind/jkl-message-box-react\";\nimport { Feedback, HAPPY, NEUTRAL, SimplifiedFeedback, UNHAPPY, VERY_HAPPY, VERY_UNHAPPY } from \"../src\";\n\nexport const Example = ({ boolValues }: ExampleComponentProps) => {\n    const Component = boolValues?.[\"Uten smilefjes\"] ? SimplifiedFeedback : Feedback;\n\n    return (\n        <>\n            <Component\n                label=\"Gi oss tilbakemelding!\"\n                description=\"Hvor fornøyd er du med denne siden for å følge saken?\"\n                onSubmit={console.info}\n                showTextArea={!boolValues?.[\"Uten tekst\"]}\n                renderCustomSuccess={(props) => (\n                    <div>\n                        <SuccessMessage title=\"Tilbakemelding sendt!\">\n                            {props.value === VERY_UNHAPPY && <>Det var trist!</>}\n                            {props.value === UNHAPPY && (\n                                <>Vi ser på alle tilbakemeldinger, håper vi kan gjøre deg mer fornøyd en annen gang!</>\n                            )}\n                            {props.value === NEUTRAL && (\n                                <>Vi vil gjerne ha fornøyde kunder, så vi skal se på tilbakemeldingen din!</>\n                            )}\n                            {props.value === HAPPY && <>Takk skal du ha!</>}\n                            {props.value === VERY_HAPPY && (\n                                <>\n                                    Det var stas du var fornøyd, vi prøver hele tiden å bli bedre! Takk for\n                                    tilbakemeldingen!\n                                </>\n                            )}\n                        </SuccessMessage>\n                        {props.message && (\n                            <div className=\"jkl-layout-spacing--small-top\">\n                                <span>Kopi av din melding</span>\n                                <pre>{props.message}</pre>\n                            </div>\n                        )}\n                    </div>\n                )}\n            />\n\n            <Component\n                label=\"Bare to valg\"\n                description=\"Hvor fornøyd er du med denne siden for å følge saken?\"\n                onSubmit={console.info}\n                showTextArea={!boolValues?.[\"Uten tekst\"]}\n                feedbackOptions={[1, 5]}\n                className=\"jkl-layout-spacing--large-top\"\n            />\n        </>\n    );\n};\n\nexport default Example;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport Example from \"./Example\";\nimport { Feedback } from \"../src\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    Feedback fra brukere er viktig for å kunne gjøre justering på tjenestene våre der det oppleves vanskelig eller kunne gi oss pekepinn på ønsker om nye tjenester feks.\n    Feedback kommer i to varianter, Simplified og vanlig. Funksjonelt er de like, men simplified bruker enkle radioknapper, mens vanlig bruker smilefjes. Du kan bestemme antallet ved å endre på FeedbackOptions propertien.\n    </Ingress>\n    <ComponentExample knobs={{\n      boolProps: [\"Uten smilefjes\", \"Uten tekst\"]\n    }} component={Example} mdxType=\"ComponentExample\" />\n    <ul>\n      <li parentName=\"ul\">{`1 - Surt fjes`}</li>\n      <li parentName=\"ul\">{`2 - Litt surt fjes`}</li>\n      <li parentName=\"ul\">{`3 - Nøytralt fjes`}</li>\n      <li parentName=\"ul\">{`4 - Smilefjes`}</li>\n      <li parentName=\"ul\">{`5 - Happy smilefjes`}</li>\n    </ul>\n    <p>{`Feedback komponenten tar ansvar for å holde på staten og sende inn svaret, du må bare sørge for å sende inn en funksjon som kalles ved innsenning eller lukking av browseren, med andre ord vi bevarer svaret på smilefjeset, selvom man ikke fyller inn tekstsvaret og sender inn selv. Funksjonen får inn et objekt med shapen`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`{ feedbackValue: 1 | 2 | 3 | 4 | 5, message?: string }\n`}</code></pre>\n    <p>{`, du må i klienten koble det opp mot ditt ønskede feedback endepunkt med eventuelle vasking og, eller transformering av data.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import _extends from '@babel/runtime/helpers/extends';\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport React, { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '@fremtind/jkl-loader-react';\n\nvar BaseButton = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(\"button\", _extends({}, props, {\n    ref: ref\n  }));\n});\nBaseButton.displayName = \"BaseButton\";\n\nvar makeButtonComponent = function makeButtonComponent(buttonType) {\n  var button = /*#__PURE__*/forwardRef(function (_ref, ref) {\n    var children = _ref.children,\n        _ref$className = _ref.className,\n        className = _ref$className === void 0 ? \"\" : _ref$className,\n        forceCompact = _ref.forceCompact,\n        inverted = _ref.inverted,\n        onClick = _ref.onClick,\n        onTouchStart = _ref.onTouchStart,\n        loader = _ref.loader,\n        rest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"forceCompact\", \"inverted\", \"onClick\", \"onTouchStart\", \"loader\"]);\n\n    var componentClassName = classNames(\"jkl-button\", \"jkl-button--\" + buttonType, {\n      \"jkl-button--compact\": forceCompact,\n      \"jkl-button--inverted\": inverted\n    });\n\n    var handleTouch = function handleTouch(event) {\n      onTouchStart && onTouchStart(event);\n      var target = event.target;\n\n      if (target && event.targetTouches.length) {\n        var Xcoord = event.targetTouches[0].clientX - target.getBoundingClientRect().x;\n        var Ycoord = event.targetTouches[0].clientY - target.getBoundingClientRect().y;\n        target.style.setProperty(\"--jkl-touch-xcoord\", Xcoord.toPrecision(4) + \"px\");\n        target.style.setProperty(\"--jkl-touch-ycoord\", Ycoord.toPrecision(4) + \"px\");\n        target.classList.add(\"jkl-button--pressed\");\n        setTimeout(function () {\n          return target.classList.remove(\"jkl-button--pressed\");\n        }, 400);\n      }\n    };\n\n    if (!loader) {\n      return /*#__PURE__*/React.createElement(BaseButton, _extends({\n        className: classNames(componentClassName, className),\n        onClick: onClick,\n        onTouchStart: handleTouch\n      }, rest, {\n        ref: ref\n      }), children);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(\"jkl-button-wrapper\", className, {\n        \"jkl-button-wrapper--compact\": forceCompact\n      })\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(\"jkl-button-wrapper__slider\", {\n        \"jkl-button-wrapper__slider--show-loader\": !!loader.showLoader\n      })\n    }, /*#__PURE__*/React.createElement(BaseButton, _extends({\n      className: componentClassName,\n      onClick: onClick,\n      onTouchStart: handleTouch,\n      disabled: loader === null || loader === void 0 ? void 0 : loader.showLoader\n    }, rest, {\n      ref: ref\n    }), children), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jkl-button-wrapper__loader jkl-layout-spacing--small-top\"\n    }, /*#__PURE__*/React.createElement(Loader, {\n      textDescription: loader.textDescription,\n      negative: inverted,\n      \"aria-hidden\": !!loader.showLoader,\n      inline: true\n    }))));\n  });\n  return button;\n};\n\nvar PrimaryButton = makeButtonComponent(\"primary\");\nvar SecondaryButton = makeButtonComponent(\"secondary\");\nvar TertiaryButton = makeButtonComponent(\"tertiary\");\n\nexport { PrimaryButton, SecondaryButton, TertiaryButton };\n","import React from 'react';\nimport classNames from 'classnames';\n\nvar Loader = function Loader(_ref) {\n  var textDescription = _ref.textDescription,\n      _ref$negative = _ref.negative,\n      negative = _ref$negative === void 0 ? false : _ref$negative,\n      _ref$inline = _ref.inline,\n      inline = _ref$inline === void 0 ? false : _ref$inline,\n      className = _ref.className,\n      _ref$dataTestAutoId = _ref.dataTestAutoId,\n      dataTestAutoId = _ref$dataTestAutoId === void 0 ? \"jkl-loader\" : _ref$dataTestAutoId;\n  var componentClassName = classNames(\"jkl-loader\", className, {\n    \"jkl-loader--negative\": negative,\n    \"jkl-loader--inline\": inline\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: componentClassName,\n    \"data-testid\": \"jkl-loader\",\n    \"data-testautoid\": dataTestAutoId,\n    title: textDescription,\n    \"aria-label\": textDescription,\n    role: \"alert\",\n    \"aria-busy\": \"true\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"jkl-loader__dot jkl-loader__dot--left\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"jkl-loader__dot jkl-loader__dot--middle\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"jkl-loader__dot jkl-loader__dot--right\"\n  }));\n};\n\nexport { Loader };\n"],"sourceRoot":""}