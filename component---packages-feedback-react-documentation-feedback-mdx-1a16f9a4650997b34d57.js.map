{"version":3,"sources":["webpack://@fremtind/portal/../packages/feedback-react/src/Smiley.tsx","webpack://@fremtind/portal/../packages/feedback-react/src/BaseFeedback.tsx","webpack://@fremtind/portal/../packages/feedback-react/src/FeedbackValues.tsx","webpack://@fremtind/portal/../packages/feedback-react/src/Feedback.tsx","webpack://@fremtind/portal/../packages/feedback-react/src/SimplifiedFeedback.tsx","webpack://@fremtind/portal/../packages/feedback-react/documentation/Example.tsx","webpack://@fremtind/portal/../packages/feedback-react/documentation/Feedback.mdx","webpack://@fremtind/portal/../packages/button-react/build/browser/index.js","webpack://@fremtind/portal/../packages/loader-react/build/browser/index.js"],"names":["Smiley","element","aria-hidden","className","fill","viewBox","cx","cy","r","d","x1","y1","x2","y2","getSmiley","hasPrompt","v","undefined","prompt","rawFeedbackValues","input","map","value","FeedbackContext","createContext","options","setValue","BaseFeedback","label","onSubmit","description","renderCustomSuccess","successMessage","successTitle","callToActionText","showTextArea","textAreaLabel","textAreaHelpLabel","feedbackOptions","headingLevel","content","useState","feedbackValue","setFeedbackValue","feedbackPrompt","setFeedbackPrompt","message","setMessage","feedbackSubmitted","setFeedbackSubmitted","feedbackSubmittedAnimation","setFeedbackSubmittedAnimation","animationRef","useAnimatedHeight","handleSubmit","useCallback","useEffect","window","addEventListener","removeEventListener","option","filter","H","cn","Provider","data-testid","title","e","preventDefault","setTimeout","ref","name","variant","rows","helpLabel","onChange","currentTarget","type","FeedbackContent","useContext","id","nanoid","feedbackOption","Fragment","key","checked","htmlFor","Feedback","props","legend","choices","_","idx","toString","inline","parseInt","target","selectedValue","SimplifiedFeedback","rest","boolValues","Component","console","info","_frontmatter","makeShortcode","warn","Ingress","ComponentExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","knobs","boolProps","component","Example","parentName","isMDXComponent","BaseButton","forwardRef","React","_extends","displayName","makeButtonComponent","buttonType","_ref","children","_ref$className","forceCompact","inverted","onClick","onTouchStart","loader","_objectWithoutProperties","componentClassName","classNames","handleTouch","event","targetTouches","length","Xcoord","clientX","getBoundingClientRect","x","Ycoord","clientY","y","style","setProperty","toPrecision","classList","add","remove","showLoader","disabled","Loader","textDescription","negative","PrimaryButton","SecondaryButton","TertiaryButton","_ref$negative","_ref$inline","_ref$dataTestAutoId","dataTestAutoId","role"],"mappings":"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","file":"component---packages-feedback-react-documentation-feedback-mdx-1a16f9a4650997b34d57.js","sourcesContent":["import React, { FC } from \"react\";\nimport { FeedbackValue } from \"./types\";\n\nconst getSmiley = (element: FeedbackValue) => {\n    switch (element) {\n        case 1:\n            return <path d=\"M40 42C40 36.4772 35.0751 32 29 32C22.9249 32 18 36.4772 18 42\"></path>;\n        case 2:\n            return <path d=\"M40 39C37.5556 35.4353 33.8529 33 29 33C24.1471 33 20.4444 35.4353 18 39\"></path>;\n        case 3:\n            return <line x1=\"20\" y1=\"37\" x2=\"36\" y2=\"37\"></line>;\n        case 4:\n            return <path d=\"M18 35C20.4444 38.5647 24.1471 41 29 41C33.8529 41 37.5556 38.5647 40 35\"></path>;\n        case 5:\n            return <path d=\"M29 45C36.5429 45 40.1429 38.3333 41 35L17 35C17.5714 38.3333 21.4571 45 29 45Z\"></path>;\n    }\n};\n\nexport const Smiley: FC<{ element: FeedbackValue }> = ({ element }) => (\n    <svg\n        aria-hidden\n        className={`jkl-feedback-icon jkl-feedback-icon--${element}`}\n        fill=\"currentColor\"\n        viewBox=\"0 0 57 57\"\n    >\n        <circle cx=\"28.5\" cy=\"28.5\" r=\"27.5\"></circle>\n        <circle cx=\"19\" cy=\"24\" r=\"2\" className=\"jkl-feedback-icon__eyes\"></circle>\n        <circle cx=\"38\" cy=\"24\" r=\"2\" className=\"jkl-feedback-icon__eyes\"></circle>\n        {getSmiley(element)}\n    </svg>\n);\n","import React, { createContext, useCallback, useEffect, useState, FC, ReactNode, FormEvent, ChangeEvent } from \"react\";\nimport cn from \"classnames\";\nimport { TextArea } from \"@fremtind/jkl-text-input-react\";\nimport { SecondaryButton } from \"@fremtind/jkl-button-react\";\nimport { SuccessMessage } from \"@fremtind/jkl-message-box-react\";\nimport { useAnimatedHeight } from \"@fremtind/jkl-react-hooks\";\nimport { VERY_UNHAPPY, UNHAPPY, NEUTRAL, HAPPY, VERY_HAPPY } from \"./FeedbackValues\";\nimport { FeedbackValue } from \"./types\";\n\nexport type FeedbackPayload = {\n    feedbackValue: FeedbackValue;\n    message?: string;\n};\n\ninterface CustomSuccessProps {\n    value?: FeedbackValue;\n    message: string;\n}\n\ninterface FeedbackValueWithPrompt {\n    value: FeedbackValue;\n    prompt: string;\n}\n\nfunction hasPrompt(v: FeedbackValue | FeedbackValueWithPrompt): v is FeedbackValueWithPrompt {\n    return (v as FeedbackValueWithPrompt).prompt !== undefined;\n}\n\nexport function rawFeedbackValues(input: Array<FeedbackValue | FeedbackValueWithPrompt>) {\n    return input.map((v) => (typeof v === \"number\" ? v : v.value));\n}\n\nexport interface BaseFeedbackProps {\n    label: string;\n    onSubmit: (data: FeedbackPayload) => void;\n    description?: string;\n    feedbackOptions?: Array<FeedbackValue | FeedbackValueWithPrompt>;\n    renderCustomSuccess?: (props: CustomSuccessProps) => ReactNode;\n    successTitle?: string;\n    successMessage?: string;\n    className?: string;\n    callToActionText?: string;\n    showTextArea?: boolean;\n    textAreaLabel?: string;\n    textAreaHelpLabel?: string;\n    headingLevel?: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"p\";\n}\n\ninterface Props extends BaseFeedbackProps {\n    content: ReactNode;\n}\n\nexport const FeedbackContext = createContext<{\n    options: Array<FeedbackValue | FeedbackValueWithPrompt>;\n    value?: FeedbackValue;\n    setValue: (next: FeedbackValue) => void;\n}>({ options: [], setValue: () => undefined });\n\nexport const BaseFeedback: FC<Props> = ({\n    label,\n    onSubmit,\n    description,\n    renderCustomSuccess,\n    successMessage = \"Det hjelper oss i arbeidet med å forbedre våre løsninger\",\n    successTitle = \"Takk for tilbakemeldingen!\",\n    callToActionText = \"Send inn tilbakemelding\",\n    showTextArea = true,\n    textAreaLabel = \"Tips oss gjerne om hva vi kan forbedre\",\n    textAreaHelpLabel = \"\",\n    className = \"\",\n    feedbackOptions = [VERY_UNHAPPY, UNHAPPY, NEUTRAL, HAPPY, VERY_HAPPY],\n    headingLevel = \"h3\",\n    content,\n}) => {\n    const [feedbackValue, setFeedbackValue] = useState<FeedbackValue>();\n    const [feedbackPrompt, setFeedbackPrompt] = useState(textAreaLabel);\n    const [message, setMessage] = useState(\"\");\n    const [feedbackSubmitted, setFeedbackSubmitted] = useState(false);\n    const [feedbackSubmittedAnimation, setFeedbackSubmittedAnimation] = useState(false);\n    const [animationRef] = useAnimatedHeight<HTMLDivElement>(feedbackValue !== undefined);\n\n    const handleSubmit = useCallback(() => {\n        if (!feedbackSubmitted && feedbackValue) {\n            onSubmit({ feedbackValue, message });\n        }\n    }, [feedbackValue, feedbackSubmitted, message, onSubmit]);\n\n    const handleActiveSubmit = (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        handleSubmit();\n        setFeedbackSubmittedAnimation(true);\n        setTimeout(() => setFeedbackSubmitted(true), 250);\n    };\n\n    const handleMessageChange = (e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) =>\n        setMessage(e.currentTarget.value);\n\n    useEffect(() => {\n        if (typeof window !== \"undefined\") {\n            window.addEventListener(\"beforeunload\", handleSubmit);\n        }\n        return () => {\n            window.removeEventListener(\"beforeunload\", handleSubmit);\n        };\n    }, [handleSubmit]);\n\n    useEffect(() => {\n        const option = feedbackOptions.filter((v) => hasPrompt(v) && v.value === feedbackValue)[0];\n        setFeedbackPrompt(option && hasPrompt(option) ? option.prompt : textAreaLabel);\n    }, [feedbackOptions, feedbackValue, textAreaLabel]);\n\n    const H = headingLevel;\n\n    return (\n        <div className={cn(\"jkl-feedback\", className)}>\n            <FeedbackContext.Provider\n                value={{ options: feedbackOptions, setValue: setFeedbackValue, value: feedbackValue }}\n            >\n                {feedbackSubmitted && (\n                    <section className=\"jkl-feedback__success\" data-testid=\"feedback-success\">\n                        {renderCustomSuccess && renderCustomSuccess({ value: feedbackValue, message })}\n                        {!renderCustomSuccess && <SuccessMessage title={successTitle}>{successMessage}</SuccessMessage>}\n                    </section>\n                )}\n                {!feedbackSubmitted && (\n                    <form\n                        className={cn(\"jkl-feedback__form\", {\n                            \"jkl-feedback__form--hidden\": feedbackSubmittedAnimation,\n                        })}\n                        onSubmit={handleActiveSubmit}\n                    >\n                        <div className=\"jkl-feedback__heading\">\n                            <H className=\"jkl-heading-large\">{label}</H>\n                            {description && <p className=\"jkl-lead\">{description}</p>}\n                        </div>\n                        <fieldset className=\"jkl-feedback__fieldset\">{content}</fieldset>\n                        <section\n                            ref={animationRef}\n                            className={cn(\"jkl-feedback__submit-wrapper\", {\n                                \"jkl-feedback__submit-wrapper--hidden jkl-layout-spacing--medium-top\":\n                                    feedbackValue === undefined,\n                            })}\n                        >\n                            <div className=\"jkl-feedback__submit-content\">\n                                {showTextArea && (\n                                    <TextArea\n                                        className=\"jkl-feedback__message-input\"\n                                        data-testid=\"feedback-text\"\n                                        name=\"feedback-text\"\n                                        label={feedbackPrompt}\n                                        variant=\"small\"\n                                        rows={3}\n                                        helpLabel={textAreaHelpLabel}\n                                        value={message}\n                                        onChange={handleMessageChange}\n                                    />\n                                )}\n                                <SecondaryButton\n                                    data-testid=\"submit-button\"\n                                    className=\"jkl-layout-spacing--medium-top\"\n                                    type=\"submit\"\n                                >\n                                    {callToActionText}\n                                </SecondaryButton>\n                            </div>\n                        </section>\n                    </form>\n                )}\n            </FeedbackContext.Provider>\n        </div>\n    );\n};\n","import { FeedbackValue } from \"./types\";\n\nexport const VERY_UNHAPPY: FeedbackValue = 1;\nexport const UNHAPPY: FeedbackValue = 2;\nexport const NEUTRAL: FeedbackValue = 3;\nexport const HAPPY: FeedbackValue = 4;\nexport const VERY_HAPPY: FeedbackValue = 5;\n","import React, { Fragment, useContext, useState, FC } from \"react\";\nimport { ScreenReaderOnly } from \"@fremtind/jkl-core\";\nimport { Smiley } from \"./Smiley\";\nimport { BaseFeedback, BaseFeedbackProps, FeedbackContext, rawFeedbackValues } from \"./BaseFeedback\";\nimport { nanoid } from \"nanoid\";\n\nconst FeedbackContent = () => {\n    const { options, value, setValue } = useContext(FeedbackContext);\n    const [id] = useState(nanoid(8));\n\n    return (\n        <>\n            {rawFeedbackValues(options)?.map((feedbackOption) => (\n                <Fragment key={feedbackOption}>\n                    <input\n                        className=\"jkl-feedback__answer-input\"\n                        type=\"radio\"\n                        name=\"feedback\"\n                        id={`${id}-feedback--${feedbackOption}`}\n                        value={feedbackOption}\n                        onChange={() => setValue(feedbackOption)}\n                        checked={value === feedbackOption}\n                    />\n                    <label\n                        data-testid={`feedback-${feedbackOption}`}\n                        className=\"jkl-feedback__answer-label\"\n                        htmlFor={`${id}-feedback--${feedbackOption}`}\n                    >\n                        <Smiley element={feedbackOption} />\n                        <ScreenReaderOnly>{feedbackOption}</ScreenReaderOnly>\n                    </label>\n                </Fragment>\n            ))}\n        </>\n    );\n};\n\nexport const Feedback: FC<BaseFeedbackProps> = (props) => {\n    return <BaseFeedback {...props} content={<FeedbackContent />} />;\n};\n","import React, { useContext, FC } from \"react\";\nimport { RadioButtons } from \"@fremtind/jkl-radio-button-react\";\nimport { BaseFeedback, BaseFeedbackProps, FeedbackContext, rawFeedbackValues } from \"./BaseFeedback\";\nimport { FeedbackValue } from \"./types\";\n\nconst FeedbackContent: FC<{ legend: string }> = ({ legend }) => {\n    const { options, value, setValue } = useContext(FeedbackContext);\n\n    return (\n        <RadioButtons\n            legend={legend}\n            name=\"feedback\"\n            choices={rawFeedbackValues(options).map((_, idx) => (idx + 1).toString())}\n            inline\n            onChange={(e) => setValue(parseInt(e.target.value, 10) as FeedbackValue)}\n            selectedValue={value?.toString()}\n        />\n    );\n};\n\nexport interface SimplifiedFeedbackProps extends Omit<BaseFeedbackProps, \"description\"> {\n    description: string;\n}\n\nexport const SimplifiedFeedback = ({ description, ...rest }: SimplifiedFeedbackProps) => {\n    return <BaseFeedback {...rest} content={<FeedbackContent legend={description} />} />;\n};\n","import React from \"react\";\nimport { ExampleComponentProps } from \"@fremtind/jkl-portal-components\";\nimport { SuccessMessage } from \"@fremtind/jkl-message-box-react\";\nimport { Feedback, HAPPY, NEUTRAL, SimplifiedFeedback, UNHAPPY, VERY_HAPPY, VERY_UNHAPPY } from \"../src\";\n\nexport const Example = ({ boolValues }: ExampleComponentProps) => {\n    const Component = boolValues?.[\"Uten smilefjes\"] ? SimplifiedFeedback : Feedback;\n\n    return (\n        <>\n            <Component\n                label=\"Gi oss tilbakemelding!\"\n                description=\"Hvor fornøyd er du med denne siden for å følge saken?\"\n                onSubmit={console.info}\n                showTextArea={!boolValues?.[\"Uten tekst\"]}\n                renderCustomSuccess={(props) => (\n                    <div>\n                        <SuccessMessage title=\"Tilbakemelding sendt!\">\n                            {props.value === VERY_UNHAPPY && <>Det var trist!</>}\n                            {props.value === UNHAPPY && (\n                                <>Vi ser på alle tilbakemeldinger, håper vi kan gjøre deg mer fornøyd en annen gang!</>\n                            )}\n                            {props.value === NEUTRAL && (\n                                <>Vi vil gjerne ha fornøyde kunder, så vi skal se på tilbakemeldingen din!</>\n                            )}\n                            {props.value === HAPPY && <>Takk skal du ha!</>}\n                            {props.value === VERY_HAPPY && (\n                                <>\n                                    Det var stas du var fornøyd, vi prøver hele tiden å bli bedre! Takk for\n                                    tilbakemeldingen!\n                                </>\n                            )}\n                        </SuccessMessage>\n                        {props.message && (\n                            <div className=\"jkl-layout-spacing--small-top\">\n                                <span>Kopi av din melding</span>\n                                <pre>{props.message}</pre>\n                            </div>\n                        )}\n                    </div>\n                )}\n            />\n\n            <Component\n                label=\"Bare to valg\"\n                description=\"Hvor fornøyd er du med denne siden for å følge saken?\"\n                onSubmit={console.info}\n                showTextArea={!boolValues?.[\"Uten tekst\"]}\n                feedbackOptions={[1, 5]}\n                className=\"jkl-layout-spacing--large-top\"\n            />\n        </>\n    );\n};\n\nexport default Example;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport Example from \"./Example\";\nimport { Feedback } from \"../src\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    Feedback-komponenten lar oss få tilbakemelding fra brukerene våre. Det kan gi oss viktig innsikt om\n    brukeropplevelsen, og avdekke ønsker om funksjonalitet.\n    </Ingress>\n    <ComponentExample knobs={{\n      boolProps: [\"Uten smilefjes\", \"Uten tekst\"]\n    }} component={Example} mdxType=\"ComponentExample\" />\n    <p>{`Komponenten kommer i to grunnvarianter: Feedback har smilefjes basert på valgene brukeren kan ta, mens SimplifiedFeedback viser vanlige radioknapper. Du kan bestemme hvilke valg brukeren skal få ved å sende inn noen eller alle tall fra 1 til 5:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`1 - Surt fjes`}</li>\n      <li parentName=\"ul\">{`2 - Litt surt fjes`}</li>\n      <li parentName=\"ul\">{`3 - Nøytralt fjes`}</li>\n      <li parentName=\"ul\">{`4 - Smilefjes`}</li>\n      <li parentName=\"ul\">{`5 - Happy smilefjes`}</li>\n    </ul>\n    <p>{`I tillegg til en score kan man la brukeren legge igjen en skriftlig tilbakemelding. Etiketten på tekstfeltet kan spesifiseres generelt og/eller defineres spesifikt basert på hvilken score brukeren har gitt.`}</p>\n    <h2>{`Innsending av data`}</h2>\n    <p>{`Du må selv sende inn en funksjon for å håndtere innsending av data, men komponenten sørger selv for at den blir kalt på riktig tidspunkt; når brukeren trykker send inn, eller når de forlater siden etter å ha tatt et valg i skjemaet.`}</p>\n    <p>{`Funksjonen du sender inn må ta imot et objekt på formen`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`{ feedbackValue: 1 | 2 | 3 | 4 | 5, message?: string }\n`}</code></pre>\n    <p>{`og du må selv koble opp mot ditt ønskede feedback-endepunkt med eventuell vasking og/eller transformering av data.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import _extends from '@babel/runtime/helpers/extends';\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport React, { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '@fremtind/jkl-loader-react';\n\nvar BaseButton = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(\"button\", _extends({}, props, {\n    ref: ref\n  }));\n});\nBaseButton.displayName = \"BaseButton\";\n\nvar makeButtonComponent = function makeButtonComponent(buttonType) {\n  var button = /*#__PURE__*/forwardRef(function (_ref, ref) {\n    var children = _ref.children,\n        _ref$className = _ref.className,\n        className = _ref$className === void 0 ? \"\" : _ref$className,\n        forceCompact = _ref.forceCompact,\n        inverted = _ref.inverted,\n        onClick = _ref.onClick,\n        onTouchStart = _ref.onTouchStart,\n        loader = _ref.loader,\n        rest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"forceCompact\", \"inverted\", \"onClick\", \"onTouchStart\", \"loader\"]);\n\n    var componentClassName = classNames(\"jkl-button\", \"jkl-button--\" + buttonType, {\n      \"jkl-button--compact\": forceCompact,\n      \"jkl-button--inverted\": inverted\n    });\n\n    var handleTouch = function handleTouch(event) {\n      onTouchStart && onTouchStart(event);\n      var target = event.target;\n\n      if (target && event.targetTouches.length) {\n        var Xcoord = event.targetTouches[0].clientX - target.getBoundingClientRect().x;\n        var Ycoord = event.targetTouches[0].clientY - target.getBoundingClientRect().y;\n        target.style.setProperty(\"--jkl-touch-xcoord\", Xcoord.toPrecision(4) + \"px\");\n        target.style.setProperty(\"--jkl-touch-ycoord\", Ycoord.toPrecision(4) + \"px\");\n        target.classList.add(\"jkl-button--pressed\");\n        setTimeout(function () {\n          return target.classList.remove(\"jkl-button--pressed\");\n        }, 400);\n      }\n    };\n\n    if (!loader) {\n      return /*#__PURE__*/React.createElement(BaseButton, _extends({\n        className: classNames(componentClassName, className),\n        onClick: onClick,\n        onTouchStart: handleTouch\n      }, rest, {\n        ref: ref\n      }), children);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(\"jkl-button-wrapper\", className, {\n        \"jkl-button-wrapper--compact\": forceCompact\n      })\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(\"jkl-button-wrapper__slider\", {\n        \"jkl-button-wrapper__slider--show-loader\": !!loader.showLoader\n      })\n    }, /*#__PURE__*/React.createElement(BaseButton, _extends({\n      className: componentClassName,\n      onClick: onClick,\n      onTouchStart: handleTouch,\n      disabled: loader === null || loader === void 0 ? void 0 : loader.showLoader\n    }, rest, {\n      ref: ref\n    }), children), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jkl-button-wrapper__loader jkl-layout-spacing--small-top\"\n    }, /*#__PURE__*/React.createElement(Loader, {\n      textDescription: loader.textDescription,\n      negative: inverted,\n      \"aria-hidden\": !!loader.showLoader,\n      inline: true\n    }))));\n  });\n  return button;\n};\n\nvar PrimaryButton = makeButtonComponent(\"primary\");\nvar SecondaryButton = makeButtonComponent(\"secondary\");\nvar TertiaryButton = makeButtonComponent(\"tertiary\");\n\nexport { PrimaryButton, SecondaryButton, TertiaryButton };\n","import React from 'react';\nimport classNames from 'classnames';\n\nvar Loader = function Loader(_ref) {\n  var textDescription = _ref.textDescription,\n      _ref$negative = _ref.negative,\n      negative = _ref$negative === void 0 ? false : _ref$negative,\n      _ref$inline = _ref.inline,\n      inline = _ref$inline === void 0 ? false : _ref$inline,\n      className = _ref.className,\n      _ref$dataTestAutoId = _ref.dataTestAutoId,\n      dataTestAutoId = _ref$dataTestAutoId === void 0 ? \"jkl-loader\" : _ref$dataTestAutoId;\n  var componentClassName = classNames(\"jkl-loader\", className, {\n    \"jkl-loader--negative\": negative,\n    \"jkl-loader--inline\": inline\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: componentClassName,\n    \"data-testid\": \"jkl-loader\",\n    \"data-testautoid\": dataTestAutoId,\n    title: textDescription,\n    \"aria-label\": textDescription,\n    role: \"alert\",\n    \"aria-busy\": \"true\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"jkl-loader__dot jkl-loader__dot--left\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"jkl-loader__dot jkl-loader__dot--middle\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"jkl-loader__dot jkl-loader__dot--right\"\n  }));\n};\n\nexport { Loader };\n"],"sourceRoot":""}